source('~/Documents/Trabajos/Letras-Tra/GESEL/reuniones/reunion3/Data/comprension.R', echo=TRUE)
source('~/Documents/Trabajos/Letras-Tra/GESEL/reuniones/reunion3/Data/comprension.R', echo=TRUE)
library(tidyverse)
?mpg
comprension <- read.csv("comprension.csv", dec = ",")
package.skeleton(name = "gesel", list = c("comprension"))
?tidyverse
?ggplot2
?MASS
library(gesel)
head(comprension)
ggplot(data = comprension) +
geom_point(mapping = aes(x = TECLE.Correctas, y = Scr.Tiempo))
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo))
# Representando una tercera variable con colores.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, color = Esc.Madre))
# Representando una tercera variable con colores.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, color = Escuela))
# Representando una tercera variable con tamaños.
# Representar una variable discreta con tamaños NO ES UNA BUENA IDEA.
# Por esta razón, R se va a quejar y va a imprimir un warning.
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = Scr.Correctas))
# Representando una tercera variable con tamaños.
# Representar una variable discreta con tamaños NO ES UNA BUENA IDEA.
# Por esta razón, R se va a quejar y va a imprimir un warning.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, size = Scr.Correctas))
# Representando una tercera variable con tranparencias.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, alpha = Scr.Correctas))
# Representando una tercera variable con formas.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, shape = Orig.Madre))
# Representando una tercera variable con colores.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, color = Esc.Madre))
# Representando una tercera variable con formas.
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, shape = Escuela))
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
facet_wrap(~ Esc.Madre, nrow = 2)
ggplot(data = comrpension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
facet_grid(Escuela ~ Esc.Madre)
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
facet_grid(Escuela ~ Esc.Madre)
# Scatterplot:
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo))
# Smoothed conditional means:
ggplot(data = comprension) +
geom_smooth(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo))
ggplot(data = comprension) +
geom_smooth(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, linetype = drv))
ggplot(data = comprension) +
geom_smooth(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo, linetype = Escuela))
ggplot(data = comprension) +
geom_point(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
geom_smooth(mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo))
ggplot(data = comprension, mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
geom_point() +
geom_smooth()
ggplot(data = comprension, mapping = aes(x = Tecle.Correctas, y = Scr.Tiempo)) +
geom_point(mapping = aes(color = Escuela)) +
geom_smooth()
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas))
ggplot(data = comprension) +
stat_count(mapping = aes(x = Scr.Correctas))
ggplot(data = comprension) +
stat_summary(
mapping = aes(x = Scr.Correctas, y = Escuela),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = comprension) +
stat_summary(
mapping = aes(x = Scr.Correctas, y = Tecle.Correctas),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = comprension) +
stat_summary(
mapping = aes(x = Esc.Madre, y = Tecle.Correctas),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = comprension) +
stat_summary(
mapping = aes(x = Esc.Madre, y = Scr.Tiempo),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Tiempo, fill = Esc.Madre))
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Esc.Madre))
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Esc.Madre))
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Scr.Correctas))
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Scr.Correctas))
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Esc.Madre))
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Esc.Madre),
position = "fill"
)
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Esc.Padre),
position = "fill"
)
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Orig.Madre),
position = "fill"
)
ggplot(data = comprension) +
geom_bar(mapping = aes(x = Scr.Correctas, fill = Orig.Madre))
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Orig.Madre),
position = "dodge"
)
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Escuela),
position = "dodge"
)
Orig.Madre
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Orig.Madre),
position = "dodge"
)
mpg
```{r, message = FALSE}
ar <- map_data("world", region=c("arg", "falk", "south georgia", "south sandwich"))
ggplot(ar, aes(long, lat, group = group)) +
geom_polygon(fill = "white", color = "black") +
coord_quickmap()
ggplot(data = comprension) +
geom_bar(
mapping = aes(x = Scr.Correctas, fill = Scr.Correctas),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
install.packages("devtools")
comprension <- read.csv("comprension.csv", dec = ",")
data("comprension")
create(name = "gesel", list = c("comprension"))
devtools::create(name = "gesel", list = c("comprension"))
skeleton.package(name = "gesel", list = c("comprension"))
View(comprension)
View(comprension)
View(comprension)
rm(comprension)
comprension <- read.csv("comprension.csv")
data("comprension")
rm(comprension)
comprension <- read.csv("comprension.csv")
skeleton.packages(name = "gesel", list = c("comprension"))
comprension <- read.csv("comprension.csv")
package.skeleton(name = "gesel", list = c("comprension"))
rm(comprension)
comprension <- read.csv("comprension.csv")
comprension$Esc.Madre <- factor(comprension$Esc.Madre,
levels = c("PI", "PC", "SI", "SEC", "SC", "NA"))
comprension
comprension$Esc.Madre
package.skeleton(name = "gesel", list = c("comprension"))
